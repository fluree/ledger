name: Create release
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Build project
        run: script/build-in-docker.sh make prep-release
      - id: get-tag
        run: |
          tag=$(echo ${{ github.ref }} | cut -d/ -f3)
          echo "::set-output name=tag::$tag"
      - id: get-version
        run: |
          version=$(echo ${{ steps.get-tag.outputs.tag }} | cut -c 2-)
          echo "::set-output name=version::$version"
      - id: pom-version
        run: |
          version=$(script/run-in-docker.sh make print-version)
          echo "::set-output name=version::$version"
      - name: Ensure version consistency
        if: ${{ steps.get-version.outputs.version != steps.pom-version.outputs.version }}
        run: |
          echo "pom.xml version is ${{ steps.pom-version.outputs.version }} but git tag is ${{ steps.get-version.outputs.version }}"
          false
      - name: Create draft GitHub release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_NOTIFICATIONS_TOKEN }}
        with:
          tag_name: ${{ steps.get-tag.outputs.tag }}
          draft: true # draft until after assets are uploaded so downstream actions can find them
          prerelease: ${{ contains(github.ref, '-') }}
          files: |
            build/fluree-${{ steps.get-version.outputs.version }}.zip
            build/fluree-${{ steps.get-version.outputs.version }}.zip.sha256
      - name: Mark release as published
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_NOTIFICATIONS_TOKEN }}
        with:
          tag_name: ${{ steps.get-tag.outputs.tag }}
          draft: false
